{
  "openapi": "3.0.0",
  "info": {
    "title": "appres",
    "version": "0.0.1",
    "description": "appres",
    "contact": {
      "name": "mhayde",
      "email": "mhayde@unitec.edu"
    }
  },
  "paths": {
    "/facturacions/count": {
      "get": {
        "x-controller-name": "FacturacionController",
        "x-operation-name": "count",
        "tags": [
          "FacturacionController"
        ],
        "responses": {
          "200": {
            "description": "Facturacion model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Facturacion.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Facturacion>"
                }
              }
            }
          }
        ],
        "operationId": "FacturacionController.count"
      }
    },
    "/facturacions/{id}": {
      "put": {
        "x-controller-name": "FacturacionController",
        "x-operation-name": "replaceById",
        "tags": [
          "FacturacionController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Facturacion PUT success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Facturacion"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "FacturacionController.replaceById"
      },
      "patch": {
        "x-controller-name": "FacturacionController",
        "x-operation-name": "updateById",
        "tags": [
          "FacturacionController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Facturacion PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FacturacionPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "FacturacionController.updateById"
      },
      "get": {
        "x-controller-name": "FacturacionController",
        "x-operation-name": "findById",
        "tags": [
          "FacturacionController"
        ],
        "responses": {
          "200": {
            "description": "Facturacion model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacturacionWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Facturacion.Filter"
                }
              }
            }
          }
        ],
        "operationId": "FacturacionController.findById"
      },
      "delete": {
        "x-controller-name": "FacturacionController",
        "x-operation-name": "deleteById",
        "tags": [
          "FacturacionController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Facturacion DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "FacturacionController.deleteById"
      }
    },
    "/facturacions": {
      "post": {
        "x-controller-name": "FacturacionController",
        "x-operation-name": "create",
        "tags": [
          "FacturacionController"
        ],
        "responses": {
          "200": {
            "description": "Facturacion model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Facturacion"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewFacturacion"
              }
            }
          }
        },
        "operationId": "FacturacionController.create"
      },
      "patch": {
        "x-controller-name": "FacturacionController",
        "x-operation-name": "updateAll",
        "tags": [
          "FacturacionController"
        ],
        "responses": {
          "200": {
            "description": "Facturacion PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Facturacion.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Facturacion>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FacturacionPartial"
              }
            }
          }
        },
        "operationId": "FacturacionController.updateAll"
      },
      "get": {
        "x-controller-name": "FacturacionController",
        "x-operation-name": "find",
        "tags": [
          "FacturacionController"
        ],
        "responses": {
          "200": {
            "description": "Array of Facturacion model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FacturacionWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Facturacion.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "FacturacionController.find"
      }
    },
    "/ordens/count": {
      "get": {
        "x-controller-name": "OrdenController",
        "x-operation-name": "count",
        "tags": [
          "OrdenController"
        ],
        "responses": {
          "200": {
            "description": "Orden model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Orden.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Orden>"
                }
              }
            }
          }
        ],
        "operationId": "OrdenController.count"
      }
    },
    "/ordens/{id}": {
      "put": {
        "x-controller-name": "OrdenController",
        "x-operation-name": "replaceById",
        "tags": [
          "OrdenController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Orden PUT success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Orden"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "OrdenController.replaceById"
      },
      "patch": {
        "x-controller-name": "OrdenController",
        "x-operation-name": "updateById",
        "tags": [
          "OrdenController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Orden PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrdenPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "OrdenController.updateById"
      },
      "get": {
        "x-controller-name": "OrdenController",
        "x-operation-name": "findById",
        "tags": [
          "OrdenController"
        ],
        "responses": {
          "200": {
            "description": "Orden model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrdenWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Orden.Filter"
                }
              }
            }
          }
        ],
        "operationId": "OrdenController.findById"
      },
      "delete": {
        "x-controller-name": "OrdenController",
        "x-operation-name": "deleteById",
        "tags": [
          "OrdenController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Orden DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "OrdenController.deleteById"
      }
    },
    "/ordens": {
      "post": {
        "x-controller-name": "OrdenController",
        "x-operation-name": "create",
        "tags": [
          "OrdenController"
        ],
        "responses": {
          "200": {
            "description": "Orden model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Orden"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewOrden"
              }
            }
          }
        },
        "operationId": "OrdenController.create"
      },
      "patch": {
        "x-controller-name": "OrdenController",
        "x-operation-name": "updateAll",
        "tags": [
          "OrdenController"
        ],
        "responses": {
          "200": {
            "description": "Orden PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Orden.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Orden>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrdenPartial"
              }
            }
          }
        },
        "operationId": "OrdenController.updateAll"
      },
      "get": {
        "x-controller-name": "OrdenController",
        "x-operation-name": "find",
        "tags": [
          "OrdenController"
        ],
        "responses": {
          "200": {
            "description": "Array of Orden model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrdenWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Orden.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "OrdenController.find"
      }
    },
    "/ping": {
      "get": {
        "x-controller-name": "PingController",
        "x-operation-name": "ping",
        "tags": [
          "PingController"
        ],
        "responses": {
          "200": {
            "description": "Ping Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PingResponse"
                }
              }
            }
          }
        },
        "operationId": "PingController.ping"
      }
    },
    "/productos/count": {
      "get": {
        "x-controller-name": "ProductoController",
        "x-operation-name": "count",
        "tags": [
          "ProductoController"
        ],
        "responses": {
          "200": {
            "description": "Producto model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Producto.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Producto>"
                }
              }
            }
          }
        ],
        "operationId": "ProductoController.count"
      }
    },
    "/productos/{id}": {
      "put": {
        "x-controller-name": "ProductoController",
        "x-operation-name": "replaceById",
        "tags": [
          "ProductoController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Producto PUT success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Producto"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "ProductoController.replaceById"
      },
      "patch": {
        "x-controller-name": "ProductoController",
        "x-operation-name": "updateById",
        "tags": [
          "ProductoController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Producto PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductoPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "ProductoController.updateById"
      },
      "get": {
        "x-controller-name": "ProductoController",
        "x-operation-name": "findById",
        "tags": [
          "ProductoController"
        ],
        "responses": {
          "200": {
            "description": "Producto model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductoWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Producto.Filter"
                }
              }
            }
          }
        ],
        "operationId": "ProductoController.findById"
      },
      "delete": {
        "x-controller-name": "ProductoController",
        "x-operation-name": "deleteById",
        "tags": [
          "ProductoController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Producto DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "ProductoController.deleteById"
      }
    },
    "/productos": {
      "post": {
        "x-controller-name": "ProductoController",
        "x-operation-name": "create",
        "tags": [
          "ProductoController"
        ],
        "responses": {
          "200": {
            "description": "Producto model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Producto"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewProducto"
              }
            }
          }
        },
        "operationId": "ProductoController.create"
      },
      "patch": {
        "x-controller-name": "ProductoController",
        "x-operation-name": "updateAll",
        "tags": [
          "ProductoController"
        ],
        "responses": {
          "200": {
            "description": "Producto PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Producto.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Producto>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductoPartial"
              }
            }
          }
        },
        "operationId": "ProductoController.updateAll"
      },
      "get": {
        "x-controller-name": "ProductoController",
        "x-operation-name": "find",
        "tags": [
          "ProductoController"
        ],
        "responses": {
          "200": {
            "description": "Array of Producto model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductoWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Producto.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "ProductoController.find"
      }
    },
    "/signup": {
      "post": {
        "x-controller-name": "UserController",
        "x-operation-name": "signUp",
        "tags": [
          "UserController"
        ],
        "responses": {
          "200": {
            "description": "User",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUser"
              }
            }
          }
        },
        "operationId": "UserController.signUp"
      }
    },
    "/users/login": {
      "post": {
        "x-controller-name": "UserController",
        "x-operation-name": "login",
        "tags": [
          "UserController"
        ],
        "responses": {
          "200": {
            "description": "Token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8
                  }
                }
              }
            }
          },
          "description": "The input of login function",
          "required": true
        },
        "operationId": "UserController.login"
      }
    }
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "components": {
    "schemas": {
      "Facturacion": {
        "title": "Facturacion",
        "type": "object",
        "properties": {
          "idfactura": {
            "type": "string"
          },
          "idorden": {
            "type": "string"
          },
          "total": {
            "type": "number"
          },
          "metodopago": {
            "type": "string"
          }
        },
        "required": [
          "idorden",
          "total"
        ],
        "additionalProperties": false
      },
      "NewFacturacion": {
        "title": "NewFacturacion",
        "type": "object",
        "description": "(tsType: Omit<Facturacion, 'idfactura'>, schemaOptions: { title: 'NewFacturacion', exclude: [ 'idfactura' ] })",
        "properties": {
          "idorden": {
            "type": "string"
          },
          "total": {
            "type": "number"
          },
          "metodopago": {
            "type": "string"
          }
        },
        "required": [
          "idorden",
          "total"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<Facturacion, 'idfactura'>"
      },
      "FacturacionWithRelations": {
        "title": "FacturacionWithRelations",
        "type": "object",
        "description": "(tsType: FacturacionWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "idfactura": {
            "type": "string"
          },
          "idorden": {
            "type": "string"
          },
          "total": {
            "type": "number"
          },
          "metodopago": {
            "type": "string"
          }
        },
        "required": [
          "idorden",
          "total"
        ],
        "additionalProperties": false,
        "x-typescript-type": "FacturacionWithRelations"
      },
      "FacturacionPartial": {
        "title": "FacturacionPartial",
        "type": "object",
        "description": "(tsType: Partial<Facturacion>, schemaOptions: { partial: true })",
        "properties": {
          "idfactura": {
            "type": "string"
          },
          "idorden": {
            "type": "string"
          },
          "total": {
            "type": "number"
          },
          "metodopago": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Facturacion>"
      },
      "Orden": {
        "title": "Orden",
        "type": "object",
        "properties": {
          "idorden": {
            "type": "string"
          },
          "nummesa": {
            "type": "number"
          },
          "producto": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "subtotal": {
            "type": "number"
          },
          "isv": {
            "type": "number"
          },
          "total": {
            "type": "number"
          },
          "estado": {
            "type": "string"
          }
        },
        "required": [
          "nummesa",
          "producto",
          "subtotal",
          "isv",
          "total"
        ],
        "additionalProperties": false
      },
      "NewOrden": {
        "title": "NewOrden",
        "type": "object",
        "description": "(tsType: Omit<Orden, 'idorden'>, schemaOptions: { title: 'NewOrden', exclude: [ 'idorden' ] })",
        "properties": {
          "nummesa": {
            "type": "number"
          },
          "producto": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "subtotal": {
            "type": "number"
          },
          "isv": {
            "type": "number"
          },
          "total": {
            "type": "number"
          },
          "estado": {
            "type": "string"
          }
        },
        "required": [
          "nummesa",
          "producto",
          "subtotal",
          "isv",
          "total"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<Orden, 'idorden'>"
      },
      "OrdenWithRelations": {
        "title": "OrdenWithRelations",
        "type": "object",
        "description": "(tsType: OrdenWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "idorden": {
            "type": "string"
          },
          "nummesa": {
            "type": "number"
          },
          "producto": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "subtotal": {
            "type": "number"
          },
          "isv": {
            "type": "number"
          },
          "total": {
            "type": "number"
          },
          "estado": {
            "type": "string"
          }
        },
        "required": [
          "nummesa",
          "producto",
          "subtotal",
          "isv",
          "total"
        ],
        "additionalProperties": false,
        "x-typescript-type": "OrdenWithRelations"
      },
      "OrdenPartial": {
        "title": "OrdenPartial",
        "type": "object",
        "description": "(tsType: Partial<Orden>, schemaOptions: { partial: true })",
        "properties": {
          "idorden": {
            "type": "string"
          },
          "nummesa": {
            "type": "number"
          },
          "producto": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "subtotal": {
            "type": "number"
          },
          "isv": {
            "type": "number"
          },
          "total": {
            "type": "number"
          },
          "estado": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Orden>"
      },
      "Producto": {
        "title": "Producto",
        "type": "object",
        "properties": {
          "idproducto": {
            "type": "string"
          },
          "nombre": {
            "type": "string"
          },
          "descripcion": {
            "type": "string"
          },
          "preciounitario": {
            "type": "number"
          },
          "categoria": {
            "type": "string"
          }
        },
        "required": [
          "nombre",
          "preciounitario",
          "categoria"
        ],
        "additionalProperties": false
      },
      "NewProducto": {
        "title": "NewProducto",
        "type": "object",
        "description": "(tsType: Omit<Producto, 'idproducto'>, schemaOptions: { title: 'NewProducto', exclude: [ 'idproducto' ] })",
        "properties": {
          "nombre": {
            "type": "string"
          },
          "descripcion": {
            "type": "string"
          },
          "preciounitario": {
            "type": "number"
          },
          "categoria": {
            "type": "string"
          }
        },
        "required": [
          "nombre",
          "preciounitario",
          "categoria"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<Producto, 'idproducto'>"
      },
      "ProductoWithRelations": {
        "title": "ProductoWithRelations",
        "type": "object",
        "description": "(tsType: ProductoWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "idproducto": {
            "type": "string"
          },
          "nombre": {
            "type": "string"
          },
          "descripcion": {
            "type": "string"
          },
          "preciounitario": {
            "type": "number"
          },
          "categoria": {
            "type": "string"
          }
        },
        "required": [
          "nombre",
          "preciounitario",
          "categoria"
        ],
        "additionalProperties": false,
        "x-typescript-type": "ProductoWithRelations"
      },
      "ProductoPartial": {
        "title": "ProductoPartial",
        "type": "object",
        "description": "(tsType: Partial<Producto>, schemaOptions: { partial: true })",
        "properties": {
          "idproducto": {
            "type": "string"
          },
          "nombre": {
            "type": "string"
          },
          "descripcion": {
            "type": "string"
          },
          "preciounitario": {
            "type": "number"
          },
          "categoria": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Producto>"
      },
      "User": {
        "title": "User",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "realm": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "boolean"
          },
          "verificationToken": {
            "type": "string"
          }
        },
        "required": [
          "email"
        ],
        "additionalProperties": true
      },
      "NewUser": {
        "title": "NewUser",
        "type": "object",
        "description": "(tsType: NewUserRequest, schemaOptions: { title: 'NewUser' })",
        "properties": {
          "id": {
            "type": "string"
          },
          "realm": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "boolean"
          },
          "verificationToken": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "password"
        ],
        "additionalProperties": true,
        "x-typescript-type": "NewUserRequest"
      },
      "NewUserRequest": {
        "title": "NewUserRequest",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "realm": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "emailVerified": {
            "type": "boolean"
          },
          "verificationToken": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "password"
        ],
        "additionalProperties": true
      },
      "loopback.Count": {
        "type": "object",
        "title": "loopback.Count",
        "x-typescript-type": "@loopback/repository#Count",
        "properties": {
          "count": {
            "type": "number"
          }
        }
      },
      "Facturacion.Filter": {
        "type": "object",
        "title": "Facturacion.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "idfactura": {
                    "type": "boolean"
                  },
                  "idorden": {
                    "type": "boolean"
                  },
                  "total": {
                    "type": "boolean"
                  },
                  "metodopago": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "idfactura",
                    "idorden",
                    "total",
                    "metodopago"
                  ],
                  "example": "idfactura"
                },
                "uniqueItems": true
              }
            ],
            "title": "Facturacion.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Facturacion>"
      },
      "Facturacion.Filter1": {
        "type": "object",
        "title": "Facturacion.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Facturacion.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "idfactura": {
                    "type": "boolean"
                  },
                  "idorden": {
                    "type": "boolean"
                  },
                  "total": {
                    "type": "boolean"
                  },
                  "metodopago": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "idfactura",
                    "idorden",
                    "total",
                    "metodopago"
                  ],
                  "example": "idfactura"
                },
                "uniqueItems": true
              }
            ],
            "title": "Facturacion.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Facturacion>"
      },
      "Orden.Filter": {
        "type": "object",
        "title": "Orden.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "idorden": {
                    "type": "boolean"
                  },
                  "nummesa": {
                    "type": "boolean"
                  },
                  "producto": {
                    "type": "boolean"
                  },
                  "subtotal": {
                    "type": "boolean"
                  },
                  "isv": {
                    "type": "boolean"
                  },
                  "total": {
                    "type": "boolean"
                  },
                  "estado": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "idorden",
                    "nummesa",
                    "producto",
                    "subtotal",
                    "isv",
                    "total",
                    "estado"
                  ],
                  "example": "idorden"
                },
                "uniqueItems": true
              }
            ],
            "title": "Orden.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Orden>"
      },
      "Orden.Filter1": {
        "type": "object",
        "title": "Orden.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Orden.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "idorden": {
                    "type": "boolean"
                  },
                  "nummesa": {
                    "type": "boolean"
                  },
                  "producto": {
                    "type": "boolean"
                  },
                  "subtotal": {
                    "type": "boolean"
                  },
                  "isv": {
                    "type": "boolean"
                  },
                  "total": {
                    "type": "boolean"
                  },
                  "estado": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "idorden",
                    "nummesa",
                    "producto",
                    "subtotal",
                    "isv",
                    "total",
                    "estado"
                  ],
                  "example": "idorden"
                },
                "uniqueItems": true
              }
            ],
            "title": "Orden.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Orden>"
      },
      "PingResponse": {
        "type": "object",
        "title": "PingResponse",
        "properties": {
          "greeting": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "headers": {
            "type": "object",
            "properties": {
              "Content-Type": {
                "type": "string"
              }
            },
            "additionalProperties": true
          }
        }
      },
      "Producto.Filter": {
        "type": "object",
        "title": "Producto.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "idproducto": {
                    "type": "boolean"
                  },
                  "nombre": {
                    "type": "boolean"
                  },
                  "descripcion": {
                    "type": "boolean"
                  },
                  "preciounitario": {
                    "type": "boolean"
                  },
                  "categoria": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "idproducto",
                    "nombre",
                    "descripcion",
                    "preciounitario",
                    "categoria"
                  ],
                  "example": "idproducto"
                },
                "uniqueItems": true
              }
            ],
            "title": "Producto.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Producto>"
      },
      "Producto.Filter1": {
        "type": "object",
        "title": "Producto.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Producto.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "idproducto": {
                    "type": "boolean"
                  },
                  "nombre": {
                    "type": "boolean"
                  },
                  "descripcion": {
                    "type": "boolean"
                  },
                  "preciounitario": {
                    "type": "boolean"
                  },
                  "categoria": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "idproducto",
                    "nombre",
                    "descripcion",
                    "preciounitario",
                    "categoria"
                  ],
                  "example": "idproducto"
                },
                "uniqueItems": true
              }
            ],
            "title": "Producto.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Producto>"
      }
    },
    "securitySchemes": {
      "jwt": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "jwt": []
    }
  ]
}
